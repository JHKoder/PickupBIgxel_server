plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
}

group = 'github.jhkoder'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter'
    annotationProcessor "org.springframework.boot:spring-boot-autoconfigure-processor"


    //test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
}

tasks.named('test') {
    useJUnitPlatform()
}

allprojects { proj ->
    println "Included Module: ${proj.name}"
}

task generatePropertiesFile {
    doLast {
        def includedModules = subprojects.collect { it.name }
        file('src/main/resources/environment-modules.yml').text  = "environment: \n  modules: \n${includedModules.collect { "    - $it" }.join('\n')}"
    }
}
assemble.dependsOn generatePropertiesFile
